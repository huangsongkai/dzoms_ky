<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd"
	   default-lazy-init="true">

	<!--default-autowire="byName"-->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!--<tx:annotation-driven transaction-manager="transactionManager"/>-->
	<context:annotation-config />
	<!--,com.dz.kaiying.controller.activiti,com.dz.kaiying.taskListener-->
	<context:component-scan base-package="com.dz.common,com.dz.module,com.dz.kaiying,com.dz.kaiying.repository.hiber" >
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
	</context:component-scan>
	<!--<task:annotation-driven/>-->
	<!--<aop:aspectj-autoproxy/>-->

	<!-- 配置数据源 -->
	<!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >-->
		<!--<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>-->
		<!--<property name="url" value="jdbc:mysql://127.0.0.1:3306/ky_dzomsdb"></property>-->
		<!--<property name="username" value="root"></property>-->
		<!--<property name="upwd" value="123456"></property>-->
	<!--</bean>-->

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/ky_dzomsdb?zeroDateTimeBehavior=convertToNull&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false"></property>
		<property name="user" value="root"></property>
		<property name="password" value="123456"></property>
		<property name="maxPoolSize" value="100"></property>
		<property name="minPoolSize" value="5"></property>
		<property name="idleConnectionTestPeriod" value="120"></property>
	</bean>

	 <!--配置SessionFactory-->
	<bean id="sessionFactory" name="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.dz</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>

				<!--<prop key="hibernate.show_sql">true</prop>-->
				<!--<prop key="hibernate.format_sql">true</prop>-->
			</props>
		</property>
	</bean>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<tx:annotation-driven transaction-manager="txManager"></tx:annotation-driven>

	<bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:MyConfiguare.properties</value>
			</list>
		</property>
	</bean>
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="properties" ref="configProperties"/>
	</bean>

	<!--&lt;!&ndash;  声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager &nd
	ash;&gt;-->
	<!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
	<!--<tx:attributes>-->
	<!--<tx:method name="find*" rollback-for="Exception" read-only="true"/>-->
	<!--<tx:method name="check*" rollback-for="Exception" read-only="true"/>-->
	<!--<tx:method name="gen*" rollback-for="Exception" read-only="true"/>-->
	<!--<tx:method name="*" rollback-for="Exception" propagation="REQUIRED" />-->
	<!--</tx:attributes>-->
	<!--</tx:advice>-->

	<!--activiti-->

	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="deploymentResources" value="classpath*:processes/*" />
		<!--<property name="deploymentResources" value="classpath:processes/*.bpmn" />  -->
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="txManager" />
		<property name="databaseSchemaUpdate" value="true" />
		<property name="jobExecutorActivate" value="false" />
		<property name="activityFontName" value="宋体"/>
		<property name="labelFontName" value="宋体"/>
		<property name="eventListeners">
			<list>
				<bean class="com.dz.kaiying.controller.MyEventListener" />
			</list>
		</property>
	</bean>
	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration" />
	</bean>
	<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
	<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
	<bean id="taskService" factory-bean="processEngine" factory-method= "getTaskService" />
	<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
	<bean id="formService" factory-bean="processEngine" factory-method="getFormService" />
	<bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />
	<bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService" />


	<!-- 集成REST服务需要的bean -->
	<bean id="restResponseFactory" class="org.activiti.rest.service.api.RestResponseFactory" />
	<bean id="contentTypeResolver" class="org.activiti.rest.common.application.DefaultContentTypeResolver" />


	<!--<import resource="classpath:activiti.cfg.xml"/>-->

	<!-- 配置事务，使用代理的方式 ,可以不用-->
	<!-- <bean id="transactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">
        <property name="transactionManager" ref="transactionManager"></property>
        <property name="transactionAttributes">
            <props>
                <prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="modify*">PROPAGATION_REQUIRED,-myException</prop>
                <prop key="del*">PROPAGATION_REQUIRED</prop>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean> -->
</beans>
